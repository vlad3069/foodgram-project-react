name: API FoodGram Project CI/CD

on: [push]

jobs:

  tests:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v3
    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: 3.8

    - name: Install dependencies
      run: | 
        python -m pip install --upgrade pip
        pip install -r ./backend/requirements_testing.txt

    - name: Test with flake8 and django tests
      run: |
        python -m flake8

  copy_files_to_server:
    name: Copy infra and docs
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v2

    - name: Create projects directory
      uses: appleboy/ssh-action@master
      with:
        host: ${{ secrets.HOST }}
        username: ${{ secrets.USER }}
        key: ${{ secrets.SSH_KEY }}
        passphrase: ${{ secrets.PASSPHRASE }}
        script: |
              mkdir projects
              cd projects && mkdir -p foodgram && mkdir -p foodgram/docs              
              scp -r /infra ${{ secrets.USER }}@${{ secrets.HOST }}:/${{ secrets.USER }}/projects/infra
              scp -r /docs ${{ secrets.USER }}@${{ secrets.HOST }}:/${{ secrets.USER }}/projects/docs

  build_and_push_backend_to_docker_hub:
    name: Push Docker backend-image to Docker Hub
    runs-on: ubuntu-latest
        
    needs: tests
    steps:
      - name: Check out the repo
        uses: actions/checkout@v2
      - name: Set up Docker Buidx
        uses: docker/setup-buildx-action@v1
      - name: Login to Docker
        uses: docker/login-action@v1
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}
      - name: Push to Docker hub
        uses: docker/build-push-action@v2
        with:
          push: true
          context: backend
          tags: ${{ secrets.DOCKER_USERNAME }}/foodgram_back_v1:latest

  build_and_push_frontend_to_docker_hub:
    name: Push Docker frontend-image to Docker Hub
    runs-on: ubuntu-latest
        
    steps:
      - name: Check out the repo
        uses: actions/checkout@v2
      - name: Set up Docker Buidx
        uses: docker/setup-buildx-action@v1
      - name: Login to Docker
        uses: docker/login-action@v1
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}
      - name: Push to Docker hub
        uses: docker/build-push-action@v2
        with:
          push: true
          context: frontend
          tags: ${{ secrets.DOCKER_USERNAME }}/foodgram_front_v1:latest

  deploy:
    runs-on: ubuntu-latest
    needs:
      - copy_files_to_server
      - build_and_push_backend_to_docker_hub
      - build_and_push_frontend_to_docker_hub
    steps: 
    - name: Executing remote ssh commands to deploy
      uses: appleboy/ssh-action@master
      with:
        host: ${{ secrets.HOST }}
        username: ${{ secrets.USER }}
        key: ${{ secrets.SSH_KEY }}
        passphrase: ${{ secrets.PASSPHRASE }}
        script: |
              cd projects/foodgram/
              rm -f .env
              touch .env
              echo DB_ENGINE=${{ secrets.DB_ENGINE }} >> .env
              echo DB_NAME=${{ secrets.DB_NAME }} >> .env
              echo POSTGRES_USER=${{ secrets.POSTGRES_USER }} >> .env
              echo POSTGRES_PASSWORD=${{ secrets.POSTGRES_PASSWORD }} >> .env
              echo DB_HOST=${{ secrets.DB_HOST }} >> .env
              echo DB_PORT=${{ secrets.DB_PORT }} >> .env
              sudo docker-compose stop
              sudo docker image rm ${{ secrets.DOCKER_USERNAME }}/foodgram_front_v1
              sudo docker pull ${{ secrets.DOCKER_USERNAME }}/foodgram_back_v1
              sudo docker-compose up -d --build

          
  send_message:
    runs-on: ubuntu-latest
    needs: deploy
    steps:
    - name: send message
      uses: appleboy/telegram-action@master
      with:
        to: ${{ secrets.TELEGRAM_TO }}
        token: ${{ secrets.TELEGRAM_TOKEN }}
        message: ${{ github.workflow }} успешно выполнен! 